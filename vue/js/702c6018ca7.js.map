{"version":3,"sources":["webpack://webpack-web/./node_modules/_konva@8.3.10@konva/lib/shapes/Arc.js","webpack://webpack-web/./node_modules/_konva@8.3.10@konva/lib/shapes/Arrow.js","webpack://webpack-web/./node_modules/_konva@8.3.10@konva/lib/shapes/Circle.js","webpack://webpack-web/./node_modules/_konva@8.3.10@konva/lib/shapes/Ellipse.js","webpack://webpack-web/./node_modules/_konva@8.3.10@konva/lib/shapes/Image.js","webpack://webpack-web/./node_modules/_konva@8.3.10@konva/lib/shapes/Label.js","webpack://webpack-web/./node_modules/_konva@8.3.10@konva/lib/shapes/Line.js","webpack://webpack-web/./node_modules/_konva@8.3.10@konva/lib/shapes/Rect.js","webpack://webpack-web/./node_modules/_konva@8.3.10@konva/lib/shapes/RegularPolygon.js"],"names":[],"mappings":"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","file":"js/702c6018ca7.js","sourcesContent":["import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { Konva } from '../Global.js';\nimport { getNumberValidator, getBooleanValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Arc extends Shape {\n    _sceneFunc(context) {\n        var angle = Konva.getAngle(this.angle()), clockwise = this.clockwise();\n        context.beginPath();\n        context.arc(0, 0, this.outerRadius(), 0, angle, clockwise);\n        context.arc(0, 0, this.innerRadius(), angle, 0, !clockwise);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.outerRadius() * 2;\n    }\n    getHeight() {\n        return this.outerRadius() * 2;\n    }\n    setWidth(width) {\n        this.outerRadius(width / 2);\n    }\n    setHeight(height) {\n        this.outerRadius(height / 2);\n    }\n    getSelfRect() {\n        const innerRadius = this.innerRadius();\n        const outerRadius = this.outerRadius();\n        const clockwise = this.clockwise();\n        const angle = Konva.getAngle(clockwise ? 360 - this.angle() : this.angle());\n        const boundLeftRatio = Math.cos(Math.min(angle, Math.PI));\n        const boundRightRatio = 1;\n        const boundTopRatio = Math.sin(Math.min(Math.max(Math.PI, angle), (3 * Math.PI) / 2));\n        const boundBottomRatio = Math.sin(Math.min(angle, Math.PI / 2));\n        const boundLeft = boundLeftRatio * (boundLeftRatio > 0 ? innerRadius : outerRadius);\n        const boundRight = boundRightRatio * (boundRightRatio > 0 ? outerRadius : innerRadius);\n        const boundTop = boundTopRatio * (boundTopRatio > 0 ? innerRadius : outerRadius);\n        const boundBottom = boundBottomRatio * (boundBottomRatio > 0 ? outerRadius : innerRadius);\n        return {\n            x: boundLeft,\n            y: clockwise ? -1 * boundBottom : boundTop,\n            width: boundRight - boundLeft,\n            height: boundBottom - boundTop,\n        };\n    }\n}\nArc.prototype._centroid = true;\nArc.prototype.className = 'Arc';\nArc.prototype._attrsAffectingSize = ['innerRadius', 'outerRadius'];\n_registerNode(Arc);\nFactory.addGetterSetter(Arc, 'innerRadius', 0, getNumberValidator());\nFactory.addGetterSetter(Arc, 'outerRadius', 0, getNumberValidator());\nFactory.addGetterSetter(Arc, 'angle', 0, getNumberValidator());\nFactory.addGetterSetter(Arc, 'clockwise', false, getBooleanValidator());\n","import { Factory } from '../Factory.js';\nimport { Line } from './Line.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nimport { Path } from './Path.js';\nexport class Arrow extends Line {\n    _sceneFunc(ctx) {\n        super._sceneFunc(ctx);\n        var PI2 = Math.PI * 2;\n        var points = this.points();\n        var tp = points;\n        var fromTension = this.tension() !== 0 && points.length > 4;\n        if (fromTension) {\n            tp = this.getTensionPoints();\n        }\n        var length = this.pointerLength();\n        var n = points.length;\n        var dx, dy;\n        if (fromTension) {\n            const lp = [\n                tp[tp.length - 4],\n                tp[tp.length - 3],\n                tp[tp.length - 2],\n                tp[tp.length - 1],\n                points[n - 2],\n                points[n - 1],\n            ];\n            const lastLength = Path.calcLength(tp[tp.length - 4], tp[tp.length - 3], 'C', lp);\n            const previous = Path.getPointOnQuadraticBezier(Math.min(1, 1 - length / lastLength), lp[0], lp[1], lp[2], lp[3], lp[4], lp[5]);\n            dx = points[n - 2] - previous.x;\n            dy = points[n - 1] - previous.y;\n        }\n        else {\n            dx = points[n - 2] - points[n - 4];\n            dy = points[n - 1] - points[n - 3];\n        }\n        var radians = (Math.atan2(dy, dx) + PI2) % PI2;\n        var width = this.pointerWidth();\n        if (this.pointerAtEnding()) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(points[n - 2], points[n - 1]);\n            ctx.rotate(radians);\n            ctx.moveTo(0, 0);\n            ctx.lineTo(-length, width / 2);\n            ctx.lineTo(-length, -width / 2);\n            ctx.closePath();\n            ctx.restore();\n            this.__fillStroke(ctx);\n        }\n        if (this.pointerAtBeginning()) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(points[0], points[1]);\n            if (fromTension) {\n                dx = (tp[0] + tp[2]) / 2 - points[0];\n                dy = (tp[1] + tp[3]) / 2 - points[1];\n            }\n            else {\n                dx = points[2] - points[0];\n                dy = points[3] - points[1];\n            }\n            ctx.rotate((Math.atan2(-dy, -dx) + PI2) % PI2);\n            ctx.moveTo(0, 0);\n            ctx.lineTo(-length, width / 2);\n            ctx.lineTo(-length, -width / 2);\n            ctx.closePath();\n            ctx.restore();\n            this.__fillStroke(ctx);\n        }\n    }\n    __fillStroke(ctx) {\n        var isDashEnabled = this.dashEnabled();\n        if (isDashEnabled) {\n            this.attrs.dashEnabled = false;\n            ctx.setLineDash([]);\n        }\n        ctx.fillStrokeShape(this);\n        if (isDashEnabled) {\n            this.attrs.dashEnabled = true;\n        }\n    }\n    getSelfRect() {\n        const lineRect = super.getSelfRect();\n        const offset = this.pointerWidth() / 2;\n        return {\n            x: lineRect.x - offset,\n            y: lineRect.y - offset,\n            width: lineRect.width + offset * 2,\n            height: lineRect.height + offset * 2,\n        };\n    }\n}\nArrow.prototype.className = 'Arrow';\n_registerNode(Arrow);\nFactory.addGetterSetter(Arrow, 'pointerLength', 10, getNumberValidator());\nFactory.addGetterSetter(Arrow, 'pointerWidth', 10, getNumberValidator());\nFactory.addGetterSetter(Arrow, 'pointerAtBeginning', false);\nFactory.addGetterSetter(Arrow, 'pointerAtEnding', true);\n","import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Circle extends Shape {\n    _sceneFunc(context) {\n        context.beginPath();\n        context.arc(0, 0, this.attrs.radius || 0, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.radius() * 2;\n    }\n    getHeight() {\n        return this.radius() * 2;\n    }\n    setWidth(width) {\n        if (this.radius() !== width / 2) {\n            this.radius(width / 2);\n        }\n    }\n    setHeight(height) {\n        if (this.radius() !== height / 2) {\n            this.radius(height / 2);\n        }\n    }\n}\nCircle.prototype._centroid = true;\nCircle.prototype.className = 'Circle';\nCircle.prototype._attrsAffectingSize = ['radius'];\n_registerNode(Circle);\nFactory.addGetterSetter(Circle, 'radius', 0, getNumberValidator());\n","import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Ellipse extends Shape {\n    _sceneFunc(context) {\n        var rx = this.radiusX(), ry = this.radiusY();\n        context.beginPath();\n        context.save();\n        if (rx !== ry) {\n            context.scale(1, ry / rx);\n        }\n        context.arc(0, 0, rx, 0, Math.PI * 2, false);\n        context.restore();\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.radiusX() * 2;\n    }\n    getHeight() {\n        return this.radiusY() * 2;\n    }\n    setWidth(width) {\n        this.radiusX(width / 2);\n    }\n    setHeight(height) {\n        this.radiusY(height / 2);\n    }\n}\nEllipse.prototype.className = 'Ellipse';\nEllipse.prototype._centroid = true;\nEllipse.prototype._attrsAffectingSize = ['radiusX', 'radiusY'];\n_registerNode(Ellipse);\nFactory.addComponentsGetterSetter(Ellipse, 'radius', ['x', 'y']);\nFactory.addGetterSetter(Ellipse, 'radiusX', 0, getNumberValidator());\nFactory.addGetterSetter(Ellipse, 'radiusY', 0, getNumberValidator());\n","import { Util } from '../Util.js';\nimport { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Image extends Shape {\n    constructor(attrs) {\n        super(attrs);\n        this.on('imageChange.konva', () => {\n            this._setImageLoad();\n        });\n        this._setImageLoad();\n    }\n    _setImageLoad() {\n        const image = this.image();\n        if (image && image.complete) {\n            return;\n        }\n        if (image && image.readyState === 4) {\n            return;\n        }\n        if (image && image['addEventListener']) {\n            image['addEventListener']('load', () => {\n                this._requestDraw();\n            });\n        }\n    }\n    _useBufferCanvas() {\n        return super._useBufferCanvas(true);\n    }\n    _sceneFunc(context) {\n        const width = this.getWidth();\n        const height = this.getHeight();\n        const image = this.attrs.image;\n        let params;\n        if (image) {\n            const cropWidth = this.attrs.cropWidth;\n            const cropHeight = this.attrs.cropHeight;\n            if (cropWidth && cropHeight) {\n                params = [\n                    image,\n                    this.cropX(),\n                    this.cropY(),\n                    cropWidth,\n                    cropHeight,\n                    0,\n                    0,\n                    width,\n                    height,\n                ];\n            }\n            else {\n                params = [image, 0, 0, width, height];\n            }\n        }\n        if (this.hasFill() || this.hasStroke()) {\n            context.beginPath();\n            context.rect(0, 0, width, height);\n            context.closePath();\n            context.fillStrokeShape(this);\n        }\n        if (image) {\n            context.drawImage.apply(context, params);\n        }\n    }\n    _hitFunc(context) {\n        var width = this.width(), height = this.height();\n        context.beginPath();\n        context.rect(0, 0, width, height);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        var _a, _b;\n        return (_a = this.attrs.width) !== null && _a !== void 0 ? _a : (_b = this.image()) === null || _b === void 0 ? void 0 : _b.width;\n    }\n    getHeight() {\n        var _a, _b;\n        return (_a = this.attrs.height) !== null && _a !== void 0 ? _a : (_b = this.image()) === null || _b === void 0 ? void 0 : _b.height;\n    }\n    static fromURL(url, callback, onError = null) {\n        var img = Util.createImageElement();\n        img.onload = function () {\n            var image = new Image({\n                image: img,\n            });\n            callback(image);\n        };\n        img.onerror = onError;\n        img.crossOrigin = 'Anonymous';\n        img.src = url;\n    }\n}\nImage.prototype.className = 'Image';\n_registerNode(Image);\nFactory.addGetterSetter(Image, 'image');\nFactory.addComponentsGetterSetter(Image, 'crop', ['x', 'y', 'width', 'height']);\nFactory.addGetterSetter(Image, 'cropX', 0, getNumberValidator());\nFactory.addGetterSetter(Image, 'cropY', 0, getNumberValidator());\nFactory.addGetterSetter(Image, 'cropWidth', 0, getNumberValidator());\nFactory.addGetterSetter(Image, 'cropHeight', 0, getNumberValidator());\n","import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { Group } from '../Group.js';\nimport { getNumberOrArrayOfNumbersValidator, getNumberValidator, } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nvar ATTR_CHANGE_LIST = [\n    'fontFamily',\n    'fontSize',\n    'fontStyle',\n    'padding',\n    'lineHeight',\n    'text',\n    'width',\n    'height',\n], CHANGE_KONVA = 'Change.konva', NONE = 'none', UP = 'up', RIGHT = 'right', DOWN = 'down', LEFT = 'left', attrChangeListLen = ATTR_CHANGE_LIST.length;\nexport class Label extends Group {\n    constructor(config) {\n        super(config);\n        this.on('add.konva', function (evt) {\n            this._addListeners(evt.child);\n            this._sync();\n        });\n    }\n    getText() {\n        return this.find('Text')[0];\n    }\n    getTag() {\n        return this.find('Tag')[0];\n    }\n    _addListeners(text) {\n        var that = this, n;\n        var func = function () {\n            that._sync();\n        };\n        for (n = 0; n < attrChangeListLen; n++) {\n            text.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, func);\n        }\n    }\n    getWidth() {\n        return this.getText().width();\n    }\n    getHeight() {\n        return this.getText().height();\n    }\n    _sync() {\n        var text = this.getText(), tag = this.getTag(), width, height, pointerDirection, pointerWidth, x, y, pointerHeight;\n        if (text && tag) {\n            width = text.width();\n            height = text.height();\n            pointerDirection = tag.pointerDirection();\n            pointerWidth = tag.pointerWidth();\n            pointerHeight = tag.pointerHeight();\n            x = 0;\n            y = 0;\n            switch (pointerDirection) {\n                case UP:\n                    x = width / 2;\n                    y = -1 * pointerHeight;\n                    break;\n                case RIGHT:\n                    x = width + pointerWidth;\n                    y = height / 2;\n                    break;\n                case DOWN:\n                    x = width / 2;\n                    y = height + pointerHeight;\n                    break;\n                case LEFT:\n                    x = -1 * pointerWidth;\n                    y = height / 2;\n                    break;\n            }\n            tag.setAttrs({\n                x: -1 * x,\n                y: -1 * y,\n                width: width,\n                height: height,\n            });\n            text.setAttrs({\n                x: -1 * x,\n                y: -1 * y,\n            });\n        }\n    }\n}\nLabel.prototype.className = 'Label';\n_registerNode(Label);\nexport class Tag extends Shape {\n    _sceneFunc(context) {\n        var width = this.width(), height = this.height(), pointerDirection = this.pointerDirection(), pointerWidth = this.pointerWidth(), pointerHeight = this.pointerHeight(), cornerRadius = this.cornerRadius();\n        let topLeft = 0;\n        let topRight = 0;\n        let bottomLeft = 0;\n        let bottomRight = 0;\n        if (typeof cornerRadius === 'number') {\n            topLeft = topRight = bottomLeft = bottomRight = Math.min(cornerRadius, width / 2, height / 2);\n        }\n        else {\n            topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\n            topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\n            bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\n            bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\n        }\n        context.beginPath();\n        context.moveTo(topLeft, 0);\n        if (pointerDirection === UP) {\n            context.lineTo((width - pointerWidth) / 2, 0);\n            context.lineTo(width / 2, -1 * pointerHeight);\n            context.lineTo((width + pointerWidth) / 2, 0);\n        }\n        context.lineTo(width - topRight, 0);\n        context.arc(width - topRight, topRight, topRight, (Math.PI * 3) / 2, 0, false);\n        if (pointerDirection === RIGHT) {\n            context.lineTo(width, (height - pointerHeight) / 2);\n            context.lineTo(width + pointerWidth, height / 2);\n            context.lineTo(width, (height + pointerHeight) / 2);\n        }\n        context.lineTo(width, height - bottomRight);\n        context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n        if (pointerDirection === DOWN) {\n            context.lineTo((width + pointerWidth) / 2, height);\n            context.lineTo(width / 2, height + pointerHeight);\n            context.lineTo((width - pointerWidth) / 2, height);\n        }\n        context.lineTo(bottomLeft, height);\n        context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n        if (pointerDirection === LEFT) {\n            context.lineTo(0, (height + pointerHeight) / 2);\n            context.lineTo(-1 * pointerWidth, height / 2);\n            context.lineTo(0, (height - pointerHeight) / 2);\n        }\n        context.lineTo(0, topLeft);\n        context.arc(topLeft, topLeft, topLeft, Math.PI, (Math.PI * 3) / 2, false);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getSelfRect() {\n        var x = 0, y = 0, pointerWidth = this.pointerWidth(), pointerHeight = this.pointerHeight(), direction = this.pointerDirection(), width = this.width(), height = this.height();\n        if (direction === UP) {\n            y -= pointerHeight;\n            height += pointerHeight;\n        }\n        else if (direction === DOWN) {\n            height += pointerHeight;\n        }\n        else if (direction === LEFT) {\n            x -= pointerWidth * 1.5;\n            width += pointerWidth;\n        }\n        else if (direction === RIGHT) {\n            width += pointerWidth * 1.5;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n        };\n    }\n}\nTag.prototype.className = 'Tag';\n_registerNode(Tag);\nFactory.addGetterSetter(Tag, 'pointerDirection', NONE);\nFactory.addGetterSetter(Tag, 'pointerWidth', 0, getNumberValidator());\nFactory.addGetterSetter(Tag, 'pointerHeight', 0, getNumberValidator());\nFactory.addGetterSetter(Tag, 'cornerRadius', 0, getNumberOrArrayOfNumbersValidator(4));\n","import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator, getNumberArrayValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nfunction getControlPoints(x0, y0, x1, y1, x2, y2, t) {\n    var d01 = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2)), d12 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)), fa = (t * d01) / (d01 + d12), fb = (t * d12) / (d01 + d12), p1x = x1 - fa * (x2 - x0), p1y = y1 - fa * (y2 - y0), p2x = x1 + fb * (x2 - x0), p2y = y1 + fb * (y2 - y0);\n    return [p1x, p1y, p2x, p2y];\n}\nfunction expandPoints(p, tension) {\n    var len = p.length, allPoints = [], n, cp;\n    for (n = 2; n < len - 2; n += 2) {\n        cp = getControlPoints(p[n - 2], p[n - 1], p[n], p[n + 1], p[n + 2], p[n + 3], tension);\n        if (isNaN(cp[0])) {\n            continue;\n        }\n        allPoints.push(cp[0]);\n        allPoints.push(cp[1]);\n        allPoints.push(p[n]);\n        allPoints.push(p[n + 1]);\n        allPoints.push(cp[2]);\n        allPoints.push(cp[3]);\n    }\n    return allPoints;\n}\nexport class Line extends Shape {\n    constructor(config) {\n        super(config);\n        this.on('pointsChange.konva tensionChange.konva closedChange.konva bezierChange.konva', function () {\n            this._clearCache('tensionPoints');\n        });\n    }\n    _sceneFunc(context) {\n        var points = this.points(), length = points.length, tension = this.tension(), closed = this.closed(), bezier = this.bezier(), tp, len, n;\n        if (!length) {\n            return;\n        }\n        context.beginPath();\n        context.moveTo(points[0], points[1]);\n        if (tension !== 0 && length > 4) {\n            tp = this.getTensionPoints();\n            len = tp.length;\n            n = closed ? 0 : 4;\n            if (!closed) {\n                context.quadraticCurveTo(tp[0], tp[1], tp[2], tp[3]);\n            }\n            while (n < len - 2) {\n                context.bezierCurveTo(tp[n++], tp[n++], tp[n++], tp[n++], tp[n++], tp[n++]);\n            }\n            if (!closed) {\n                context.quadraticCurveTo(tp[len - 2], tp[len - 1], points[length - 2], points[length - 1]);\n            }\n        }\n        else if (bezier) {\n            n = 2;\n            while (n < length) {\n                context.bezierCurveTo(points[n++], points[n++], points[n++], points[n++], points[n++], points[n++]);\n            }\n        }\n        else {\n            for (n = 2; n < length; n += 2) {\n                context.lineTo(points[n], points[n + 1]);\n            }\n        }\n        if (closed) {\n            context.closePath();\n            context.fillStrokeShape(this);\n        }\n        else {\n            context.strokeShape(this);\n        }\n    }\n    getTensionPoints() {\n        return this._getCache('tensionPoints', this._getTensionPoints);\n    }\n    _getTensionPoints() {\n        if (this.closed()) {\n            return this._getTensionPointsClosed();\n        }\n        else {\n            return expandPoints(this.points(), this.tension());\n        }\n    }\n    _getTensionPointsClosed() {\n        var p = this.points(), len = p.length, tension = this.tension(), firstControlPoints = getControlPoints(p[len - 2], p[len - 1], p[0], p[1], p[2], p[3], tension), lastControlPoints = getControlPoints(p[len - 4], p[len - 3], p[len - 2], p[len - 1], p[0], p[1], tension), middle = expandPoints(p, tension), tp = [firstControlPoints[2], firstControlPoints[3]]\n            .concat(middle)\n            .concat([\n            lastControlPoints[0],\n            lastControlPoints[1],\n            p[len - 2],\n            p[len - 1],\n            lastControlPoints[2],\n            lastControlPoints[3],\n            firstControlPoints[0],\n            firstControlPoints[1],\n            p[0],\n            p[1],\n        ]);\n        return tp;\n    }\n    getWidth() {\n        return this.getSelfRect().width;\n    }\n    getHeight() {\n        return this.getSelfRect().height;\n    }\n    getSelfRect() {\n        var points = this.points();\n        if (points.length < 4) {\n            return {\n                x: points[0] || 0,\n                y: points[1] || 0,\n                width: 0,\n                height: 0,\n            };\n        }\n        if (this.tension() !== 0) {\n            points = [\n                points[0],\n                points[1],\n                ...this._getTensionPoints(),\n                points[points.length - 2],\n                points[points.length - 1],\n            ];\n        }\n        else {\n            points = this.points();\n        }\n        var minX = points[0];\n        var maxX = points[0];\n        var minY = points[1];\n        var maxY = points[1];\n        var x, y;\n        for (var i = 0; i < points.length / 2; i++) {\n            x = points[i * 2];\n            y = points[i * 2 + 1];\n            minX = Math.min(minX, x);\n            maxX = Math.max(maxX, x);\n            minY = Math.min(minY, y);\n            maxY = Math.max(maxY, y);\n        }\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n}\nLine.prototype.className = 'Line';\nLine.prototype._attrsAffectingSize = ['points', 'bezier', 'tension'];\n_registerNode(Line);\nFactory.addGetterSetter(Line, 'closed', false);\nFactory.addGetterSetter(Line, 'bezier', false);\nFactory.addGetterSetter(Line, 'tension', 0, getNumberValidator());\nFactory.addGetterSetter(Line, 'points', [], getNumberArrayValidator());\n","import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { _registerNode } from '../Global.js';\nimport { getNumberOrArrayOfNumbersValidator } from '../Validators.js';\nexport class Rect extends Shape {\n    _sceneFunc(context) {\n        var cornerRadius = this.cornerRadius(), width = this.width(), height = this.height();\n        context.beginPath();\n        if (!cornerRadius) {\n            context.rect(0, 0, width, height);\n        }\n        else {\n            let topLeft = 0;\n            let topRight = 0;\n            let bottomLeft = 0;\n            let bottomRight = 0;\n            if (typeof cornerRadius === 'number') {\n                topLeft = topRight = bottomLeft = bottomRight = Math.min(cornerRadius, width / 2, height / 2);\n            }\n            else {\n                topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\n                topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\n                bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\n                bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\n            }\n            context.moveTo(topLeft, 0);\n            context.lineTo(width - topRight, 0);\n            context.arc(width - topRight, topRight, topRight, (Math.PI * 3) / 2, 0, false);\n            context.lineTo(width, height - bottomRight);\n            context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n            context.lineTo(bottomLeft, height);\n            context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n            context.lineTo(0, topLeft);\n            context.arc(topLeft, topLeft, topLeft, Math.PI, (Math.PI * 3) / 2, false);\n        }\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n}\nRect.prototype.className = 'Rect';\n_registerNode(Rect);\nFactory.addGetterSetter(Rect, 'cornerRadius', 0, getNumberOrArrayOfNumbersValidator(4));\n","import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class RegularPolygon extends Shape {\n    _sceneFunc(context) {\n        const points = this._getPoints();\n        context.beginPath();\n        context.moveTo(points[0].x, points[0].y);\n        for (var n = 1; n < points.length; n++) {\n            context.lineTo(points[n].x, points[n].y);\n        }\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    _getPoints() {\n        const sides = this.attrs.sides;\n        const radius = this.attrs.radius || 0;\n        const points = [];\n        for (var n = 0; n < sides; n++) {\n            points.push({\n                x: radius * Math.sin((n * 2 * Math.PI) / sides),\n                y: -1 * radius * Math.cos((n * 2 * Math.PI) / sides),\n            });\n        }\n        return points;\n    }\n    getSelfRect() {\n        const points = this._getPoints();\n        var minX = points[0].x;\n        var maxX = points[0].y;\n        var minY = points[0].x;\n        var maxY = points[0].y;\n        points.forEach((point) => {\n            minX = Math.min(minX, point.x);\n            maxX = Math.max(maxX, point.x);\n            minY = Math.min(minY, point.y);\n            maxY = Math.max(maxY, point.y);\n        });\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n    getWidth() {\n        return this.radius() * 2;\n    }\n    getHeight() {\n        return this.radius() * 2;\n    }\n    setWidth(width) {\n        this.radius(width / 2);\n    }\n    setHeight(height) {\n        this.radius(height / 2);\n    }\n}\nRegularPolygon.prototype.className = 'RegularPolygon';\nRegularPolygon.prototype._centroid = true;\nRegularPolygon.prototype._attrsAffectingSize = ['radius'];\n_registerNode(RegularPolygon);\nFactory.addGetterSetter(RegularPolygon, 'radius', 0, getNumberValidator());\nFactory.addGetterSetter(RegularPolygon, 'sides', 0, getNumberValidator());\n"],"sourceRoot":""}