{"version":3,"sources":["webpack://webpack-web/./node_modules/_konva@8.3.10@konva/lib/shapes/Path.js"],"names":[],"mappings":"2JAGO,MAAM,SAAa,IAAM,CAC5B,YAAY,EAAQ,CAChB,MAAM,CAAM,EACZ,KAAK,UAAY,CAAC,EAClB,KAAK,WAAa,EAClB,KAAK,UAAY,EAAK,cAAc,KAAK,KAAK,CAAC,EAC/C,KAAK,WAAa,EAClB,OAAS,GAAI,EAAG,EAAI,KAAK,UAAU,OAAQ,EAAE,EACzC,KAAK,YAAc,KAAK,UAAU,GAAG,WAEzC,KAAK,GAAG,mBAAoB,UAAY,CACpC,KAAK,UAAY,EAAK,cAAc,KAAK,KAAK,CAAC,EAC/C,KAAK,WAAa,EAClB,OAAS,GAAI,EAAG,EAAI,KAAK,UAAU,OAAQ,EAAE,EACzC,KAAK,YAAc,KAAK,UAAU,GAAG,UAE7C,CAAC,CACL,CACA,WAAW,EAAS,CAChB,GAAI,GAAK,KAAK,UACd,EAAQ,UAAU,EAElB,OADI,GAAW,GACN,EAAI,EAAG,EAAI,EAAG,OAAQ,IAAK,CAChC,GAAI,GAAI,EAAG,GAAG,QACV,EAAI,EAAG,GAAG,OACd,OAAQ,OACC,IACD,EAAQ,OAAO,EAAE,GAAI,EAAE,EAAE,EACzB,UACC,IACD,EAAQ,OAAO,EAAE,GAAI,EAAE,EAAE,EACzB,UACC,IACD,EAAQ,cAAc,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,EAAE,EACxD,UACC,IACD,EAAQ,iBAAiB,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,EAAE,EAC/C,UACC,IACD,GAAI,GAAK,EAAE,GAAI,EAAK,EAAE,GAAI,EAAK,EAAE,GAAI,EAAK,EAAE,GAAI,EAAQ,EAAE,GAAI,EAAS,EAAE,GAAI,EAAM,EAAE,GAAI,EAAK,EAAE,GAC5F,EAAI,EAAK,EAAK,EAAK,EACnB,EAAS,EAAK,EAAK,EAAI,EAAK,EAC5B,EAAS,EAAK,EAAK,EAAK,EAAK,EACjC,EAAQ,UAAU,EAAI,CAAE,EACxB,EAAQ,OAAO,CAAG,EAClB,EAAQ,MAAM,EAAQ,CAAM,EAC5B,EAAQ,IAAI,EAAG,EAAG,EAAG,EAAO,EAAQ,EAAQ,EAAI,CAAE,EAClD,EAAQ,MAAM,EAAI,EAAQ,EAAI,CAAM,EACpC,EAAQ,OAAO,CAAC,CAAG,EACnB,EAAQ,UAAU,CAAC,EAAI,CAAC,CAAE,EAC1B,UACC,IACD,EAAW,GACX,EAAQ,UAAU,EAClB,MAEZ,CACI,CAAC,GAAY,CAAC,KAAK,QAAQ,EAC3B,EAAQ,YAAY,IAAI,EAGxB,EAAQ,gBAAgB,IAAI,CAEpC,CACA,aAAc,CACV,GAAI,GAAS,CAAC,EACd,KAAK,UAAU,QAAQ,SAAU,EAAM,CACnC,GAAI,EAAK,UAAY,IAAK,CACtB,GAAI,GAAQ,EAAK,OAAO,GACpB,EAAS,EAAK,OAAO,GACrB,EAAM,EAAK,OAAO,GAAK,EACvB,EAAM,KAAK,GAAK,IAIpB,GAHI,KAAK,IAAI,EAAQ,CAAG,EAAI,GACxB,GAAM,KAAK,IAAI,EAAQ,CAAG,GAE1B,EAAS,EACT,OAAS,GAAI,EAAQ,EAAK,EAAI,EAAK,GAAK,EAAK,CACzC,KAAM,GAAQ,EAAK,wBAAwB,EAAK,OAAO,GAAI,EAAK,OAAO,GAAI,EAAK,OAAO,GAAI,EAAK,OAAO,GAAI,EAAG,CAAC,EAC/G,EAAO,KAAK,EAAM,EAAG,EAAM,CAAC,CAChC,KAGA,QAAS,GAAI,EAAQ,EAAK,EAAI,EAAK,GAAK,EAAK,CACzC,KAAM,GAAQ,EAAK,wBAAwB,EAAK,OAAO,GAAI,EAAK,OAAO,GAAI,EAAK,OAAO,GAAI,EAAK,OAAO,GAAI,EAAG,CAAC,EAC/G,EAAO,KAAK,EAAM,EAAG,EAAM,CAAC,CAChC,CAER,SACS,EAAK,UAAY,IACtB,OAAS,GAAI,EAAK,GAAK,EAAG,GAAK,IAAM,CACjC,KAAM,GAAQ,EAAK,sBAAsB,EAAG,EAAK,MAAM,EAAG,EAAK,MAAM,EAAG,EAAK,OAAO,GAAI,EAAK,OAAO,GAAI,EAAK,OAAO,GAAI,EAAK,OAAO,GAAI,EAAK,OAAO,GAAI,EAAK,OAAO,EAAE,EACtK,EAAO,KAAK,EAAM,EAAG,EAAM,CAAC,CAChC,KAGA,GAAS,EAAO,OAAO,EAAK,MAAM,CAE1C,CAAC,EAMD,OALI,GAAO,EAAO,GACd,EAAO,EAAO,GACd,EAAO,EAAO,GACd,EAAO,EAAO,GACd,EAAG,EACE,EAAI,EAAG,EAAI,EAAO,OAAS,EAAG,IACnC,EAAI,EAAO,EAAI,GACf,EAAI,EAAO,EAAI,EAAI,GACd,MAAM,CAAC,GACR,GAAO,KAAK,IAAI,EAAM,CAAC,EACvB,EAAO,KAAK,IAAI,EAAM,CAAC,GAEtB,MAAM,CAAC,GACR,GAAO,KAAK,IAAI,EAAM,CAAC,EACvB,EAAO,KAAK,IAAI,EAAM,CAAC,GAG/B,MAAO,CACH,EAAG,EACH,EAAG,EACH,MAAO,EAAO,EACd,OAAQ,EAAO,CACnB,CACJ,CACA,WAAY,CACR,MAAO,MAAK,UAChB,CACA,iBAAiB,EAAQ,CACrB,GAAI,GAAO,EAAI,EAAG,EAAK,KAAK,UAAU,OACtC,GAAI,CAAC,EACD,MAAO,MAEX,KAAO,EAAI,GAAM,EAAS,KAAK,UAAU,GAAG,YACxC,GAAU,KAAK,UAAU,GAAG,WAC5B,EAAE,EAEN,GAAI,IAAM,EACN,SAAQ,KAAK,UAAU,EAAI,GAAG,OAAO,MAAM,EAAE,EACtC,CACH,EAAG,EAAM,GACT,EAAG,EAAM,EACb,EAEJ,GAAI,EAAS,IACT,SAAQ,KAAK,UAAU,GAAG,OAAO,MAAM,EAAG,CAAC,EACpC,CACH,EAAG,EAAM,GACT,EAAG,EAAM,EACb,EAEJ,GAAI,GAAK,KAAK,UAAU,GACpB,EAAI,EAAG,OACX,OAAQ,EAAG,aACF,IACD,MAAO,GAAK,eAAe,EAAQ,EAAG,MAAM,EAAG,EAAG,MAAM,EAAG,EAAE,GAAI,EAAE,EAAE,MACpE,IACD,MAAO,GAAK,sBAAsB,EAAS,EAAG,WAAY,EAAG,MAAM,EAAG,EAAG,MAAM,EAAG,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,EAAE,MACnH,IACD,MAAO,GAAK,0BAA0B,EAAS,EAAG,WAAY,EAAG,MAAM,EAAG,EAAG,MAAM,EAAG,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,EAAE,MAC3G,IACD,GAAI,GAAK,EAAE,GAAI,EAAK,EAAE,GAAI,EAAK,EAAE,GAAI,EAAK,EAAE,GAAI,EAAQ,EAAE,GAAI,EAAS,EAAE,GAAI,EAAM,EAAE,GACrF,UAAU,EAAS,EAAU,EAAG,WACzB,EAAK,wBAAwB,EAAI,EAAI,EAAI,EAAI,EAAO,CAAG,EAEtE,MAAO,KACX,CACA,MAAO,eAAc,EAAI,EAAI,EAAI,EAAI,CACjC,MAAO,MAAK,KAAM,GAAK,GAAO,GAAK,GAAO,GAAK,GAAO,GAAK,EAAG,CAClE,CACA,MAAO,gBAAe,EAAM,EAAK,EAAK,EAAK,EAAK,EAAO,EAAO,CACtD,IAAU,QACV,GAAQ,GAER,IAAU,QACV,GAAQ,GAEZ,GAAI,GAAK,GAAM,GAAQ,GAAM,EAAM,MAC/B,EAAM,KAAK,KAAM,EAAO,EAAS,GAAI,EAAI,EAAE,EAC3C,EAAM,GACN,IAAO,IAEX,GAAI,GAAO,EAAI,EACX,EACJ,GAAI,IAAQ,EACR,EAAK,CACD,EAAG,EACH,EAAG,EAAQ,CACf,UAEM,GAAQ,GAAQ,GAAQ,EAAM,QAAgB,EACpD,EAAK,CACD,EAAG,EAAQ,EACX,EAAG,EAAQ,CACf,MAEC,CACD,GAAI,GAAI,EACJ,EAAM,KAAK,cAAc,EAAK,EAAK,EAAK,CAAG,EAC3C,EAAK,GAAQ,GAAQ,GAAM,GAAQ,GAAQ,GAAQ,GAAM,GAC7D,EAAI,EAAK,GAAM,GACf,EAAK,EAAM,EAAK,GAAM,GACtB,EAAK,EAAM,EAAK,GAAM,GACtB,GAAI,GAAQ,KAAK,cAAc,EAAO,EAAO,EAAI,CAAE,EAC/C,EAAO,KAAK,KAAK,EAAO,EAAO,EAAQ,CAAK,EAChD,EAAM,KAAK,KAAM,EAAO,EAAS,GAAI,EAAI,EAAE,EACvC,EAAM,GACN,IAAO,IAEX,EAAO,EAAI,EACX,EAAK,CACD,EAAG,EAAK,EACR,EAAG,EAAK,CACZ,CACJ,CACA,MAAO,EACX,CACA,MAAO,uBAAsB,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,CACtE,WAAa,EAAG,CACZ,MAAO,GAAI,EAAI,CACnB,CACA,WAAa,EAAG,CACZ,MAAO,GAAI,EAAI,EAAK,GAAI,EAC5B,CACA,WAAa,EAAG,CACZ,MAAO,GAAI,EAAK,GAAI,GAAM,GAAI,EAClC,CACA,WAAa,EAAG,CACZ,MAAQ,GAAI,GAAM,GAAI,GAAM,GAAI,EACpC,CACA,GAAI,GAAI,EAAM,EAAI,CAAG,EAAI,EAAM,EAAI,CAAG,EAAI,EAAM,EAAI,CAAG,EAAI,EAAM,EAAI,CAAG,EACpE,EAAI,EAAM,EAAI,CAAG,EAAI,EAAM,EAAI,CAAG,EAAI,EAAM,EAAI,CAAG,EAAI,EAAM,EAAI,CAAG,EACxE,MAAO,CACH,EAAG,EACH,EAAG,CACP,CACJ,CACA,MAAO,2BAA0B,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,CAChE,WAAa,EAAG,CACZ,MAAO,GAAI,CACf,CACA,WAAa,EAAG,CACZ,MAAO,GAAI,EAAK,GAAI,EACxB,CACA,WAAa,EAAG,CACZ,MAAQ,GAAI,GAAM,GAAI,EAC1B,CACA,GAAI,GAAI,EAAM,EAAI,CAAG,EAAI,EAAM,EAAI,CAAG,EAAI,EAAM,EAAI,CAAG,EACnD,EAAI,EAAM,EAAI,CAAG,EAAI,EAAM,EAAI,CAAG,EAAI,EAAM,EAAI,CAAG,EACvD,MAAO,CACH,EAAG,EACH,EAAG,CACP,CACJ,CACA,MAAO,yBAAwB,EAAI,EAAI,EAAI,EAAI,EAAO,EAAK,CACvD,GAAI,GAAS,KAAK,IAAI,CAAG,EAAG,EAAS,KAAK,IAAI,CAAG,EAC7C,EAAK,CACL,EAAG,EAAK,KAAK,IAAI,CAAK,EACtB,EAAG,EAAK,KAAK,IAAI,CAAK,CAC1B,EACA,MAAO,CACH,EAAG,EAAM,GAAG,EAAI,EAAS,EAAG,EAAI,GAChC,EAAG,EAAM,GAAG,EAAI,EAAS,EAAG,EAAI,EACpC,CACJ,CACA,MAAO,eAAc,EAAM,CACvB,GAAI,CAAC,EACD,MAAO,CAAC,EAEZ,GAAI,GAAK,EACL,EAAK,CACL,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACJ,EACA,EAAK,EAAG,QAAQ,GAAI,QAAO,IAAK,GAAG,EAAG,GAAG,EACzC,OAAS,GAAI,EAAG,EAAI,EAAG,OAAQ,IAC3B,EAAK,EAAG,QAAQ,GAAI,QAAO,EAAG,GAAI,GAAG,EAAG,IAAM,EAAG,EAAE,EAEvD,GAAI,GAAM,EAAG,MAAM,GAAG,EAClB,EAAK,CAAC,EACN,EAAS,CAAC,EACV,EAAM,EACN,EAAM,EACN,EAAK,sDACL,EACJ,IAAK,EAAI,EAAG,EAAI,EAAI,OAAQ,IAAK,CAC7B,GAAI,GAAM,EAAI,GACV,EAAI,EAAI,OAAO,CAAC,EAGpB,IAFA,EAAM,EAAI,MAAM,CAAC,EACjB,EAAO,OAAS,EACR,EAAQ,EAAG,KAAK,CAAG,GACvB,EAAO,KAAK,EAAM,EAAE,EAGxB,OADI,GAAI,CAAC,EACA,EAAI,EAAG,EAAO,EAAO,OAAQ,EAAI,EAAM,IAAK,CACjD,GAAI,EAAO,KAAO,KAAM,CACpB,EAAE,KAAK,EAAG,CAAC,EACX,QACJ,CACA,GAAI,GAAS,WAAW,EAAO,EAAE,EAC5B,MAAM,CAAM,EAIb,EAAE,KAAK,CAAC,EAHR,EAAE,KAAK,CAAM,CAKrB,CACA,KAAO,EAAE,OAAS,GACV,OAAM,EAAE,EAAE,GADG,CAIjB,GAAI,GAAM,KACN,EAAS,CAAC,EACV,EAAS,EAAK,EAAS,EACvB,EAAS,EAAQ,EACjB,EAAI,EAAI,EAAK,EAAI,EAAI,EAAI,EAC7B,OAAQ,OACC,IACD,GAAO,EAAE,MAAM,EACf,GAAO,EAAE,MAAM,EACf,EAAM,IACN,EAAO,KAAK,EAAK,CAAG,EACpB,UACC,IACD,EAAM,EAAE,MAAM,EACd,EAAM,EAAE,MAAM,EACd,EAAO,KAAK,EAAK,CAAG,EACpB,UACC,IACD,GAAI,GAAK,EAAE,MAAM,EACb,EAAK,EAAE,MAAM,EAIjB,GAHA,GAAO,EACP,GAAO,EACP,EAAM,IACF,EAAG,OAAS,GAAK,EAAG,EAAG,OAAS,GAAG,UAAY,KAC/C,OAAS,GAAM,EAAG,OAAS,EAAG,GAAO,EAAG,IACpC,GAAI,EAAG,GAAK,UAAY,IAAK,CACzB,EAAM,EAAG,GAAK,OAAO,GAAK,EAC1B,EAAM,EAAG,GAAK,OAAO,GAAK,EAC1B,KACJ,EAGR,EAAO,KAAK,EAAK,CAAG,EACpB,EAAI,IACJ,UACC,IACD,EAAM,EAAE,MAAM,EACd,EAAM,EAAE,MAAM,EACd,EAAM,IACN,EAAO,KAAK,EAAK,CAAG,EACpB,EAAI,IACJ,UACC,IACD,GAAO,EAAE,MAAM,EACf,EAAM,IACN,EAAO,KAAK,EAAK,CAAG,EACpB,UACC,IACD,EAAM,EAAE,MAAM,EACd,EAAM,IACN,EAAO,KAAK,EAAK,CAAG,EACpB,UACC,IACD,GAAO,EAAE,MAAM,EACf,EAAM,IACN,EAAO,KAAK,EAAK,CAAG,EACpB,UACC,IACD,EAAM,EAAE,MAAM,EACd,EAAM,IACN,EAAO,KAAK,EAAK,CAAG,EACpB,UACC,IACD,EAAO,KAAK,EAAE,MAAM,EAAG,EAAE,MAAM,EAAG,EAAE,MAAM,EAAG,EAAE,MAAM,CAAC,EACtD,EAAM,EAAE,MAAM,EACd,EAAM,EAAE,MAAM,EACd,EAAO,KAAK,EAAK,CAAG,EACpB,UACC,IACD,EAAO,KAAK,EAAM,EAAE,MAAM,EAAG,EAAM,EAAE,MAAM,EAAG,EAAM,EAAE,MAAM,EAAG,EAAM,EAAE,MAAM,CAAC,EAC9E,GAAO,EAAE,MAAM,EACf,GAAO,EAAE,MAAM,EACf,EAAM,IACN,EAAO,KAAK,EAAK,CAAG,EACpB,UACC,IACD,EAAS,EACT,EAAS,EACT,EAAU,EAAG,EAAG,OAAS,GACrB,EAAQ,UAAY,KACpB,GAAS,EAAO,GAAM,EAAQ,OAAO,IACrC,EAAS,EAAO,GAAM,EAAQ,OAAO,KAEzC,EAAO,KAAK,EAAQ,EAAQ,EAAE,MAAM,EAAG,EAAE,MAAM,CAAC,EAChD,EAAM,EAAE,MAAM,EACd,EAAM,EAAE,MAAM,EACd,EAAM,IACN,EAAO,KAAK,EAAK,CAAG,EACpB,UACC,IACD,EAAS,EACT,EAAS,EACT,EAAU,EAAG,EAAG,OAAS,GACrB,EAAQ,UAAY,KACpB,GAAS,EAAO,GAAM,EAAQ,OAAO,IACrC,EAAS,EAAO,GAAM,EAAQ,OAAO,KAEzC,EAAO,KAAK,EAAQ,EAAQ,EAAM,EAAE,MAAM,EAAG,EAAM,EAAE,MAAM,CAAC,EAC5D,GAAO,EAAE,MAAM,EACf,GAAO,EAAE,MAAM,EACf,EAAM,IACN,EAAO,KAAK,EAAK,CAAG,EACpB,UACC,IACD,EAAO,KAAK,EAAE,MAAM,EAAG,EAAE,MAAM,CAAC,EAChC,EAAM,EAAE,MAAM,EACd,EAAM,EAAE,MAAM,EACd,EAAO,KAAK,EAAK,CAAG,EACpB,UACC,IACD,EAAO,KAAK,EAAM,EAAE,MAAM,EAAG,EAAM,EAAE,MAAM,CAAC,EAC5C,GAAO,EAAE,MAAM,EACf,GAAO,EAAE,MAAM,EACf,EAAM,IACN,EAAO,KAAK,EAAK,CAAG,EACpB,UACC,IACD,EAAS,EACT,EAAS,EACT,EAAU,EAAG,EAAG,OAAS,GACrB,EAAQ,UAAY,KACpB,GAAS,EAAO,GAAM,EAAQ,OAAO,IACrC,EAAS,EAAO,GAAM,EAAQ,OAAO,KAEzC,EAAM,EAAE,MAAM,EACd,EAAM,EAAE,MAAM,EACd,EAAM,IACN,EAAO,KAAK,EAAQ,EAAQ,EAAK,CAAG,EACpC,UACC,IACD,EAAS,EACT,EAAS,EACT,EAAU,EAAG,EAAG,OAAS,GACrB,EAAQ,UAAY,KACpB,GAAS,EAAO,GAAM,EAAQ,OAAO,IACrC,EAAS,EAAO,GAAM,EAAQ,OAAO,KAEzC,GAAO,EAAE,MAAM,EACf,GAAO,EAAE,MAAM,EACf,EAAM,IACN,EAAO,KAAK,EAAQ,EAAQ,EAAK,CAAG,EACpC,UACC,IACD,EAAK,EAAE,MAAM,EACb,EAAK,EAAE,MAAM,EACb,EAAM,EAAE,MAAM,EACd,EAAK,EAAE,MAAM,EACb,EAAK,EAAE,MAAM,EACb,EAAK,EACL,EAAK,EACL,EAAM,EAAE,MAAM,EACd,EAAM,EAAE,MAAM,EACd,EAAM,IACN,EAAS,KAAK,wCAAwC,EAAI,EAAI,EAAK,EAAK,EAAI,EAAI,EAAI,EAAI,CAAG,EAC3F,UACC,IACD,EAAK,EAAE,MAAM,EACb,EAAK,EAAE,MAAM,EACb,EAAM,EAAE,MAAM,EACd,EAAK,EAAE,MAAM,EACb,EAAK,EAAE,MAAM,EACb,EAAK,EACL,EAAK,EACL,GAAO,EAAE,MAAM,EACf,GAAO,EAAE,MAAM,EACf,EAAM,IACN,EAAS,KAAK,wCAAwC,EAAI,EAAI,EAAK,EAAK,EAAI,EAAI,EAAI,EAAI,CAAG,EAC3F,MAER,EAAG,KAAK,CACJ,QAAS,GAAO,EAChB,OAAQ,EACR,MAAO,CACH,EAAG,EACH,EAAG,CACP,EACA,WAAY,KAAK,WAAW,EAAQ,EAAQ,GAAO,EAAG,CAAM,CAChE,CAAC,CACL,CACI,KAAM,KAAO,IAAM,MACnB,EAAG,KAAK,CACJ,QAAS,IACT,OAAQ,CAAC,EACT,MAAO,OACP,WAAY,CAChB,CAAC,CAET,CACA,MAAO,EACX,CACA,MAAO,YAAW,EAAG,EAAG,EAAK,EAAQ,CACjC,GAAI,GAAK,EAAI,EAAI,EACb,EAAO,EACX,OAAQ,OACC,IACD,MAAO,GAAK,cAAc,EAAG,EAAG,EAAO,GAAI,EAAO,EAAE,MACnD,IAGD,IAFA,EAAM,EACN,EAAK,EAAK,sBAAsB,EAAG,EAAG,EAAG,EAAO,GAAI,EAAO,GAAI,EAAO,GAAI,EAAO,GAAI,EAAO,GAAI,EAAO,EAAE,EACpG,EAAI,IAAM,GAAK,EAAG,GAAK,IACxB,EAAK,EAAK,sBAAsB,EAAG,EAAG,EAAG,EAAO,GAAI,EAAO,GAAI,EAAO,GAAI,EAAO,GAAI,EAAO,GAAI,EAAO,EAAE,EACzG,GAAO,EAAK,cAAc,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,EAChD,EAAK,EAET,MAAO,OACN,IAGD,IAFA,EAAM,EACN,EAAK,EAAK,0BAA0B,EAAG,EAAG,EAAG,EAAO,GAAI,EAAO,GAAI,EAAO,GAAI,EAAO,EAAE,EAClF,EAAI,IAAM,GAAK,EAAG,GAAK,IACxB,EAAK,EAAK,0BAA0B,EAAG,EAAG,EAAG,EAAO,GAAI,EAAO,GAAI,EAAO,GAAI,EAAO,EAAE,EACvF,GAAO,EAAK,cAAc,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,EAChD,EAAK,EAET,MAAO,OACN,IACD,EAAM,EACN,GAAI,GAAQ,EAAO,GACf,EAAS,EAAO,GAChB,EAAM,EAAO,GAAK,EAClB,EAAM,KAAK,GAAK,IAKpB,GAJI,KAAK,IAAI,EAAQ,CAAG,EAAI,GACxB,GAAM,KAAK,IAAI,EAAQ,CAAG,GAE9B,EAAK,EAAK,wBAAwB,EAAO,GAAI,EAAO,GAAI,EAAO,GAAI,EAAO,GAAI,EAAO,CAAC,EAClF,EAAS,EACT,IAAK,EAAI,EAAQ,EAAK,EAAI,EAAK,GAAK,EAChC,EAAK,EAAK,wBAAwB,EAAO,GAAI,EAAO,GAAI,EAAO,GAAI,EAAO,GAAI,EAAG,CAAC,EAClF,GAAO,EAAK,cAAc,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,EAChD,EAAK,MAIT,KAAK,EAAI,EAAQ,EAAK,EAAI,EAAK,GAAK,EAChC,EAAK,EAAK,wBAAwB,EAAO,GAAI,EAAO,GAAI,EAAO,GAAI,EAAO,GAAI,EAAG,CAAC,EAClF,GAAO,EAAK,cAAc,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,EAChD,EAAK,EAGb,SAAK,EAAK,wBAAwB,EAAO,GAAI,EAAO,GAAI,EAAO,GAAI,EAAO,GAAI,EAAK,CAAC,EACpF,GAAO,EAAK,cAAc,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,EACzC,EAEf,MAAO,EACX,CACA,MAAO,yCAAwC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAQ,CACnF,GAAI,GAAM,EAAU,MAAK,GAAK,KAC1B,EAAM,KAAK,IAAI,CAAG,EAAK,GAAK,GAAO,EAAO,KAAK,IAAI,CAAG,EAAK,GAAK,GAAO,EACvE,EAAM,GAAK,KAAK,IAAI,CAAG,EAAK,GAAK,GAAO,EACvC,KAAK,IAAI,CAAG,EAAK,GAAK,GAAO,EAC9B,EAAU,EAAK,EAAO,GAAK,GAAO,EAAK,EAAO,GAAK,GACnD,EAAS,GACT,IAAM,KAAK,KAAK,CAAM,EACtB,GAAM,KAAK,KAAK,CAAM,GAE1B,GAAI,GAAI,KAAK,KAAM,GAAK,EAAM,GAAK,GAAM,EAAK,EAAM,GAAK,GAAM,EAAK,EAAM,GAAK,IAC1E,GAAK,EAAM,GAAK,GAAM,EAAK,EAAM,GAAK,GAAI,EAC3C,IAAO,GACP,IAAK,IAEL,MAAM,CAAC,GACP,GAAI,GAER,GAAI,GAAO,EAAI,EAAK,EAAM,EACtB,EAAO,EAAI,CAAC,EAAK,EAAM,EACvB,EAAM,GAAK,GAAM,EAAM,KAAK,IAAI,CAAG,EAAI,EAAM,KAAK,IAAI,CAAG,EAAI,EAC7D,EAAM,GAAK,GAAM,EAAM,KAAK,IAAI,CAAG,EAAI,EAAM,KAAK,IAAI,CAAG,EAAI,EAC7D,EAAO,SAAU,EAAG,CACpB,MAAO,MAAK,KAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,EAAE,CAC9C,EACI,EAAS,SAAU,EAAG,EAAG,CACzB,MAAQ,GAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,IAAO,GAAK,CAAC,EAAI,EAAK,CAAC,EAC1D,EACI,EAAS,SAAU,EAAG,EAAG,CACzB,MAAQ,GAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,GAAK,GAAK,KAAK,KAAK,EAAO,EAAG,CAAC,CAAC,CACxE,EACI,EAAQ,EAAO,CAAC,EAAG,CAAC,EAAG,CAAE,GAAK,GAAO,EAAK,GAAK,GAAO,CAAE,CAAC,EACzD,EAAI,CAAE,GAAK,GAAO,EAAK,GAAK,GAAO,CAAE,EACrC,EAAI,CAAE,IAAK,EAAK,GAAO,EAAK,IAAK,EAAK,GAAO,CAAE,EAC/C,EAAS,EAAO,EAAG,CAAC,EACxB,MAAI,GAAO,EAAG,CAAC,GAAK,IAChB,GAAS,KAAK,IAEd,EAAO,EAAG,CAAC,GAAK,GAChB,GAAS,GAET,IAAO,GAAK,EAAS,GACrB,GAAS,EAAS,EAAI,KAAK,IAE3B,IAAO,GAAK,EAAS,GACrB,GAAS,EAAS,EAAI,KAAK,IAExB,CAAC,EAAI,EAAI,EAAI,EAAI,EAAO,EAAQ,EAAK,CAAE,CAClD,CACJ,CACA,EAAK,UAAU,UAAY,OAC3B,EAAK,UAAU,oBAAsB,CAAC,MAAM,EAC5C,SAAc,CAAI,EAClB,oBAAwB,EAAM,MAAM,C","file":"js/179c6018ca7.js","sourcesContent":["import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { _registerNode } from '../Global.js';\nexport class Path extends Shape {\n    constructor(config) {\n        super(config);\n        this.dataArray = [];\n        this.pathLength = 0;\n        this.dataArray = Path.parsePathData(this.data());\n        this.pathLength = 0;\n        for (var i = 0; i < this.dataArray.length; ++i) {\n            this.pathLength += this.dataArray[i].pathLength;\n        }\n        this.on('dataChange.konva', function () {\n            this.dataArray = Path.parsePathData(this.data());\n            this.pathLength = 0;\n            for (var i = 0; i < this.dataArray.length; ++i) {\n                this.pathLength += this.dataArray[i].pathLength;\n            }\n        });\n    }\n    _sceneFunc(context) {\n        var ca = this.dataArray;\n        context.beginPath();\n        var isClosed = false;\n        for (var n = 0; n < ca.length; n++) {\n            var c = ca[n].command;\n            var p = ca[n].points;\n            switch (c) {\n                case 'L':\n                    context.lineTo(p[0], p[1]);\n                    break;\n                case 'M':\n                    context.moveTo(p[0], p[1]);\n                    break;\n                case 'C':\n                    context.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);\n                    break;\n                case 'Q':\n                    context.quadraticCurveTo(p[0], p[1], p[2], p[3]);\n                    break;\n                case 'A':\n                    var cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6], fs = p[7];\n                    var r = rx > ry ? rx : ry;\n                    var scaleX = rx > ry ? 1 : rx / ry;\n                    var scaleY = rx > ry ? ry / rx : 1;\n                    context.translate(cx, cy);\n                    context.rotate(psi);\n                    context.scale(scaleX, scaleY);\n                    context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\n                    context.scale(1 / scaleX, 1 / scaleY);\n                    context.rotate(-psi);\n                    context.translate(-cx, -cy);\n                    break;\n                case 'z':\n                    isClosed = true;\n                    context.closePath();\n                    break;\n            }\n        }\n        if (!isClosed && !this.hasFill()) {\n            context.strokeShape(this);\n        }\n        else {\n            context.fillStrokeShape(this);\n        }\n    }\n    getSelfRect() {\n        var points = [];\n        this.dataArray.forEach(function (data) {\n            if (data.command === 'A') {\n                var start = data.points[4];\n                var dTheta = data.points[5];\n                var end = data.points[4] + dTheta;\n                var inc = Math.PI / 180.0;\n                if (Math.abs(start - end) < inc) {\n                    inc = Math.abs(start - end);\n                }\n                if (dTheta < 0) {\n                    for (let t = start - inc; t > end; t -= inc) {\n                        const point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n                        points.push(point.x, point.y);\n                    }\n                }\n                else {\n                    for (let t = start + inc; t < end; t += inc) {\n                        const point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n                        points.push(point.x, point.y);\n                    }\n                }\n            }\n            else if (data.command === 'C') {\n                for (let t = 0.0; t <= 1; t += 0.01) {\n                    const point = Path.getPointOnCubicBezier(t, data.start.x, data.start.y, data.points[0], data.points[1], data.points[2], data.points[3], data.points[4], data.points[5]);\n                    points.push(point.x, point.y);\n                }\n            }\n            else {\n                points = points.concat(data.points);\n            }\n        });\n        var minX = points[0];\n        var maxX = points[0];\n        var minY = points[1];\n        var maxY = points[1];\n        var x, y;\n        for (var i = 0; i < points.length / 2; i++) {\n            x = points[i * 2];\n            y = points[i * 2 + 1];\n            if (!isNaN(x)) {\n                minX = Math.min(minX, x);\n                maxX = Math.max(maxX, x);\n            }\n            if (!isNaN(y)) {\n                minY = Math.min(minY, y);\n                maxY = Math.max(maxY, y);\n            }\n        }\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n    getLength() {\n        return this.pathLength;\n    }\n    getPointAtLength(length) {\n        var point, i = 0, ii = this.dataArray.length;\n        if (!ii) {\n            return null;\n        }\n        while (i < ii && length > this.dataArray[i].pathLength) {\n            length -= this.dataArray[i].pathLength;\n            ++i;\n        }\n        if (i === ii) {\n            point = this.dataArray[i - 1].points.slice(-2);\n            return {\n                x: point[0],\n                y: point[1],\n            };\n        }\n        if (length < 0.01) {\n            point = this.dataArray[i].points.slice(0, 2);\n            return {\n                x: point[0],\n                y: point[1],\n            };\n        }\n        var cp = this.dataArray[i];\n        var p = cp.points;\n        switch (cp.command) {\n            case 'L':\n                return Path.getPointOnLine(length, cp.start.x, cp.start.y, p[0], p[1]);\n            case 'C':\n                return Path.getPointOnCubicBezier(length / cp.pathLength, cp.start.x, cp.start.y, p[0], p[1], p[2], p[3], p[4], p[5]);\n            case 'Q':\n                return Path.getPointOnQuadraticBezier(length / cp.pathLength, cp.start.x, cp.start.y, p[0], p[1], p[2], p[3]);\n            case 'A':\n                var cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6];\n                theta += (dTheta * length) / cp.pathLength;\n                return Path.getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi);\n        }\n        return null;\n    }\n    static getLineLength(x1, y1, x2, y2) {\n        return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    }\n    static getPointOnLine(dist, P1x, P1y, P2x, P2y, fromX, fromY) {\n        if (fromX === undefined) {\n            fromX = P1x;\n        }\n        if (fromY === undefined) {\n            fromY = P1y;\n        }\n        var m = (P2y - P1y) / (P2x - P1x + 0.00000001);\n        var run = Math.sqrt((dist * dist) / (1 + m * m));\n        if (P2x < P1x) {\n            run *= -1;\n        }\n        var rise = m * run;\n        var pt;\n        if (P2x === P1x) {\n            pt = {\n                x: fromX,\n                y: fromY + rise,\n            };\n        }\n        else if ((fromY - P1y) / (fromX - P1x + 0.00000001) === m) {\n            pt = {\n                x: fromX + run,\n                y: fromY + rise,\n            };\n        }\n        else {\n            var ix, iy;\n            var len = this.getLineLength(P1x, P1y, P2x, P2y);\n            var u = (fromX - P1x) * (P2x - P1x) + (fromY - P1y) * (P2y - P1y);\n            u = u / (len * len);\n            ix = P1x + u * (P2x - P1x);\n            iy = P1y + u * (P2y - P1y);\n            var pRise = this.getLineLength(fromX, fromY, ix, iy);\n            var pRun = Math.sqrt(dist * dist - pRise * pRise);\n            run = Math.sqrt((pRun * pRun) / (1 + m * m));\n            if (P2x < P1x) {\n                run *= -1;\n            }\n            rise = m * run;\n            pt = {\n                x: ix + run,\n                y: iy + rise,\n            };\n        }\n        return pt;\n    }\n    static getPointOnCubicBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y, P4x, P4y) {\n        function CB1(t) {\n            return t * t * t;\n        }\n        function CB2(t) {\n            return 3 * t * t * (1 - t);\n        }\n        function CB3(t) {\n            return 3 * t * (1 - t) * (1 - t);\n        }\n        function CB4(t) {\n            return (1 - t) * (1 - t) * (1 - t);\n        }\n        var x = P4x * CB1(pct) + P3x * CB2(pct) + P2x * CB3(pct) + P1x * CB4(pct);\n        var y = P4y * CB1(pct) + P3y * CB2(pct) + P2y * CB3(pct) + P1y * CB4(pct);\n        return {\n            x: x,\n            y: y,\n        };\n    }\n    static getPointOnQuadraticBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y) {\n        function QB1(t) {\n            return t * t;\n        }\n        function QB2(t) {\n            return 2 * t * (1 - t);\n        }\n        function QB3(t) {\n            return (1 - t) * (1 - t);\n        }\n        var x = P3x * QB1(pct) + P2x * QB2(pct) + P1x * QB3(pct);\n        var y = P3y * QB1(pct) + P2y * QB2(pct) + P1y * QB3(pct);\n        return {\n            x: x,\n            y: y,\n        };\n    }\n    static getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi) {\n        var cosPsi = Math.cos(psi), sinPsi = Math.sin(psi);\n        var pt = {\n            x: rx * Math.cos(theta),\n            y: ry * Math.sin(theta),\n        };\n        return {\n            x: cx + (pt.x * cosPsi - pt.y * sinPsi),\n            y: cy + (pt.x * sinPsi + pt.y * cosPsi),\n        };\n    }\n    static parsePathData(data) {\n        if (!data) {\n            return [];\n        }\n        var cs = data;\n        var cc = [\n            'm',\n            'M',\n            'l',\n            'L',\n            'v',\n            'V',\n            'h',\n            'H',\n            'z',\n            'Z',\n            'c',\n            'C',\n            'q',\n            'Q',\n            't',\n            'T',\n            's',\n            'S',\n            'a',\n            'A',\n        ];\n        cs = cs.replace(new RegExp(' ', 'g'), ',');\n        for (var n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n        var arr = cs.split('|');\n        var ca = [];\n        var coords = [];\n        var cpx = 0;\n        var cpy = 0;\n        var re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/gi;\n        var match;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            str = str.slice(1);\n            coords.length = 0;\n            while ((match = re.exec(str))) {\n                coords.push(match[0]);\n            }\n            var p = [];\n            for (var j = 0, jlen = coords.length; j < jlen; j++) {\n                if (coords[j] === '00') {\n                    p.push(0, 0);\n                    continue;\n                }\n                var parsed = parseFloat(coords[j]);\n                if (!isNaN(parsed)) {\n                    p.push(parsed);\n                }\n                else {\n                    p.push(0);\n                }\n            }\n            while (p.length > 0) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var cmd = null;\n                var points = [];\n                var startX = cpx, startY = cpy;\n                var prevCmd, ctlPtx, ctlPty;\n                var rx, ry, psi, fa, fs, x1, y1;\n                switch (c) {\n                    case 'l':\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'm':\n                        var dx = p.shift();\n                        var dy = p.shift();\n                        cpx += dx;\n                        cpy += dy;\n                        cmd = 'M';\n                        if (ca.length > 2 && ca[ca.length - 1].command === 'z') {\n                            for (var idx = ca.length - 2; idx >= 0; idx--) {\n                                if (ca[idx].command === 'M') {\n                                    cpx = ca[idx].points[0] + dx;\n                                    cpy = ca[idx].points[1] + dy;\n                                    break;\n                                }\n                            }\n                        }\n                        points.push(cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'M';\n                        points.push(cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'C':\n                        points.push(p.shift(), p.shift(), p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'c':\n                        points.push(cpx + p.shift(), cpy + p.shift(), cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'C') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\n                        }\n                        points.push(ctlPtx, ctlPty, p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'C') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\n                        }\n                        points.push(ctlPtx, ctlPty, cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'Q':\n                        points.push(p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'q':\n                        points.push(cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'Q';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'Q') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\n                        }\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'Q';\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'Q') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\n                        }\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'Q';\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p.shift();\n                        ry = p.shift();\n                        psi = p.shift();\n                        fa = p.shift();\n                        fs = p.shift();\n                        x1 = cpx;\n                        y1 = cpy;\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'A';\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n                        break;\n                    case 'a':\n                        rx = p.shift();\n                        ry = p.shift();\n                        psi = p.shift();\n                        fa = p.shift();\n                        fs = p.shift();\n                        x1 = cpx;\n                        y1 = cpy;\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'A';\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n                        break;\n                }\n                ca.push({\n                    command: cmd || c,\n                    points: points,\n                    start: {\n                        x: startX,\n                        y: startY,\n                    },\n                    pathLength: this.calcLength(startX, startY, cmd || c, points),\n                });\n            }\n            if (c === 'z' || c === 'Z') {\n                ca.push({\n                    command: 'z',\n                    points: [],\n                    start: undefined,\n                    pathLength: 0,\n                });\n            }\n        }\n        return ca;\n    }\n    static calcLength(x, y, cmd, points) {\n        var len, p1, p2, t;\n        var path = Path;\n        switch (cmd) {\n            case 'L':\n                return path.getLineLength(x, y, points[0], points[1]);\n            case 'C':\n                len = 0.0;\n                p1 = path.getPointOnCubicBezier(0, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n                for (t = 0.01; t <= 1; t += 0.01) {\n                    p2 = path.getPointOnCubicBezier(t, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n                    len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                    p1 = p2;\n                }\n                return len;\n            case 'Q':\n                len = 0.0;\n                p1 = path.getPointOnQuadraticBezier(0, x, y, points[0], points[1], points[2], points[3]);\n                for (t = 0.01; t <= 1; t += 0.01) {\n                    p2 = path.getPointOnQuadraticBezier(t, x, y, points[0], points[1], points[2], points[3]);\n                    len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                    p1 = p2;\n                }\n                return len;\n            case 'A':\n                len = 0.0;\n                var start = points[4];\n                var dTheta = points[5];\n                var end = points[4] + dTheta;\n                var inc = Math.PI / 180.0;\n                if (Math.abs(start - end) < inc) {\n                    inc = Math.abs(start - end);\n                }\n                p1 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], start, 0);\n                if (dTheta < 0) {\n                    for (t = start - inc; t > end; t -= inc) {\n                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                        p1 = p2;\n                    }\n                }\n                else {\n                    for (t = start + inc; t < end; t += inc) {\n                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                        p1 = p2;\n                    }\n                }\n                p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], end, 0);\n                len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                return len;\n        }\n        return 0;\n    }\n    static convertEndpointToCenterParameterization(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg) {\n        var psi = psiDeg * (Math.PI / 180.0);\n        var xp = (Math.cos(psi) * (x1 - x2)) / 2.0 + (Math.sin(psi) * (y1 - y2)) / 2.0;\n        var yp = (-1 * Math.sin(psi) * (x1 - x2)) / 2.0 +\n            (Math.cos(psi) * (y1 - y2)) / 2.0;\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n        if (lambda > 1) {\n            rx *= Math.sqrt(lambda);\n            ry *= Math.sqrt(lambda);\n        }\n        var f = Math.sqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) /\n            (rx * rx * (yp * yp) + ry * ry * (xp * xp)));\n        if (fa === fs) {\n            f *= -1;\n        }\n        if (isNaN(f)) {\n            f = 0;\n        }\n        var cxp = (f * rx * yp) / ry;\n        var cyp = (f * -ry * xp) / rx;\n        var cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;\n        var vMag = function (v) {\n            return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n        };\n        var vRatio = function (u, v) {\n            return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n        };\n        var vAngle = function (u, v) {\n            return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n        };\n        var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n        var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n        var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n        var dTheta = vAngle(u, v);\n        if (vRatio(u, v) <= -1) {\n            dTheta = Math.PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * Math.PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * Math.PI;\n        }\n        return [cx, cy, rx, ry, theta, dTheta, psi, fs];\n    }\n}\nPath.prototype.className = 'Path';\nPath.prototype._attrsAffectingSize = ['data'];\n_registerNode(Path);\nFactory.addGetterSetter(Path, 'data');\n"],"sourceRoot":""}