{"version":3,"sources":["webpack://webpack-web/./node_modules/_konva@8.3.10@konva/lib/DragAndDrop.js","webpack://webpack-web/./node_modules/_konva@8.3.10@konva/lib/Factory.js","webpack://webpack-web/./node_modules/_konva@8.3.10@konva/lib/FastLayer.js","webpack://webpack-web/./node_modules/_konva@8.3.10@konva/lib/Global.js","webpack://webpack-web/./node_modules/_konva@8.3.10@konva/lib/Group.js","webpack://webpack-web/./node_modules/_konva@8.3.10@konva/lib/Layer.js","webpack://webpack-web/./node_modules/_konva@8.3.10@konva/lib/PointerEvents.js"],"names":[],"mappings":"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","file":"js/851c6018ca7.js","sourcesContent":["import { Konva } from './Global.js';\nimport { Util } from './Util.js';\nexport const DD = {\n    get isDragging() {\n        var flag = false;\n        DD._dragElements.forEach((elem) => {\n            if (elem.dragStatus === 'dragging') {\n                flag = true;\n            }\n        });\n        return flag;\n    },\n    justDragged: false,\n    get node() {\n        var node;\n        DD._dragElements.forEach((elem) => {\n            node = elem.node;\n        });\n        return node;\n    },\n    _dragElements: new Map(),\n    _drag(evt) {\n        const nodesToFireEvents = [];\n        DD._dragElements.forEach((elem, key) => {\n            const { node } = elem;\n            const stage = node.getStage();\n            stage.setPointersPositions(evt);\n            if (elem.pointerId === undefined) {\n                elem.pointerId = Util._getFirstPointerId(evt);\n            }\n            const pos = stage._changedPointerPositions.find((pos) => pos.id === elem.pointerId);\n            if (!pos) {\n                return;\n            }\n            if (elem.dragStatus !== 'dragging') {\n                var dragDistance = node.dragDistance();\n                var distance = Math.max(Math.abs(pos.x - elem.startPointerPos.x), Math.abs(pos.y - elem.startPointerPos.y));\n                if (distance < dragDistance) {\n                    return;\n                }\n                node.startDrag({ evt });\n                if (!node.isDragging()) {\n                    return;\n                }\n            }\n            node._setDragPosition(evt, elem);\n            nodesToFireEvents.push(node);\n        });\n        nodesToFireEvents.forEach((node) => {\n            node.fire('dragmove', {\n                type: 'dragmove',\n                target: node,\n                evt: evt,\n            }, true);\n        });\n    },\n    _endDragBefore(evt) {\n        DD._dragElements.forEach((elem) => {\n            const { node } = elem;\n            const stage = node.getStage();\n            if (evt) {\n                stage.setPointersPositions(evt);\n            }\n            const pos = stage._changedPointerPositions.find((pos) => pos.id === elem.pointerId);\n            if (!pos) {\n                return;\n            }\n            if (elem.dragStatus === 'dragging' || elem.dragStatus === 'stopped') {\n                DD.justDragged = true;\n                Konva._mouseListenClick = false;\n                Konva._touchListenClick = false;\n                Konva._pointerListenClick = false;\n                elem.dragStatus = 'stopped';\n            }\n            const drawNode = elem.node.getLayer() ||\n                (elem.node instanceof Konva['Stage'] && elem.node);\n            if (drawNode) {\n                drawNode.batchDraw();\n            }\n        });\n    },\n    _endDragAfter(evt) {\n        DD._dragElements.forEach((elem, key) => {\n            if (elem.dragStatus === 'stopped') {\n                elem.node.fire('dragend', {\n                    type: 'dragend',\n                    target: elem.node,\n                    evt: evt,\n                }, true);\n            }\n            if (elem.dragStatus !== 'dragging') {\n                DD._dragElements.delete(key);\n            }\n        });\n    },\n};\nif (Konva.isBrowser) {\n    window.addEventListener('mouseup', DD._endDragBefore, true);\n    window.addEventListener('touchend', DD._endDragBefore, true);\n    window.addEventListener('mousemove', DD._drag);\n    window.addEventListener('touchmove', DD._drag);\n    window.addEventListener('mouseup', DD._endDragAfter, false);\n    window.addEventListener('touchend', DD._endDragAfter, false);\n}\n","import { Util } from './Util.js';\nimport { getComponentValidator } from './Validators.js';\nvar GET = 'get', SET = 'set';\nexport const Factory = {\n    addGetterSetter(constructor, attr, def, validator, after) {\n        Factory.addGetter(constructor, attr, def);\n        Factory.addSetter(constructor, attr, validator, after);\n        Factory.addOverloadedGetterSetter(constructor, attr);\n    },\n    addGetter(constructor, attr, def) {\n        var method = GET + Util._capitalize(attr);\n        constructor.prototype[method] =\n            constructor.prototype[method] ||\n                function () {\n                    var val = this.attrs[attr];\n                    return val === undefined ? def : val;\n                };\n    },\n    addSetter(constructor, attr, validator, after) {\n        var method = SET + Util._capitalize(attr);\n        if (!constructor.prototype[method]) {\n            Factory.overWriteSetter(constructor, attr, validator, after);\n        }\n    },\n    overWriteSetter(constructor, attr, validator, after) {\n        var method = SET + Util._capitalize(attr);\n        constructor.prototype[method] = function (val) {\n            if (validator && val !== undefined && val !== null) {\n                val = validator.call(this, val, attr);\n            }\n            this._setAttr(attr, val);\n            if (after) {\n                after.call(this);\n            }\n            return this;\n        };\n    },\n    addComponentsGetterSetter(constructor, attr, components, validator, after) {\n        var len = components.length, capitalize = Util._capitalize, getter = GET + capitalize(attr), setter = SET + capitalize(attr), n, component;\n        constructor.prototype[getter] = function () {\n            var ret = {};\n            for (n = 0; n < len; n++) {\n                component = components[n];\n                ret[component] = this.getAttr(attr + capitalize(component));\n            }\n            return ret;\n        };\n        var basicValidator = getComponentValidator(components);\n        constructor.prototype[setter] = function (val) {\n            var oldVal = this.attrs[attr], key;\n            if (validator) {\n                val = validator.call(this, val);\n            }\n            if (basicValidator) {\n                basicValidator.call(this, val, attr);\n            }\n            for (key in val) {\n                if (!val.hasOwnProperty(key)) {\n                    continue;\n                }\n                this._setAttr(attr + capitalize(key), val[key]);\n            }\n            this._fireChangeEvent(attr, oldVal, val);\n            if (after) {\n                after.call(this);\n            }\n            return this;\n        };\n        Factory.addOverloadedGetterSetter(constructor, attr);\n    },\n    addOverloadedGetterSetter(constructor, attr) {\n        var capitalizedAttr = Util._capitalize(attr), setter = SET + capitalizedAttr, getter = GET + capitalizedAttr;\n        constructor.prototype[attr] = function () {\n            if (arguments.length) {\n                this[setter](arguments[0]);\n                return this;\n            }\n            return this[getter]();\n        };\n    },\n    addDeprecatedGetterSetter(constructor, attr, def, validator) {\n        Util.error('Adding deprecated ' + attr);\n        var method = GET + Util._capitalize(attr);\n        var message = attr +\n            ' property is deprecated and will be removed soon. Look at Konva change log for more information.';\n        constructor.prototype[method] = function () {\n            Util.error(message);\n            var val = this.attrs[attr];\n            return val === undefined ? def : val;\n        };\n        Factory.addSetter(constructor, attr, validator, function () {\n            Util.error(message);\n        });\n        Factory.addOverloadedGetterSetter(constructor, attr);\n    },\n    backCompat(constructor, methods) {\n        Util.each(methods, function (oldMethodName, newMethodName) {\n            var method = constructor.prototype[newMethodName];\n            var oldGetter = GET + Util._capitalize(oldMethodName);\n            var oldSetter = SET + Util._capitalize(oldMethodName);\n            function deprecated() {\n                method.apply(this, arguments);\n                Util.error('\"' +\n                    oldMethodName +\n                    '\" method is deprecated and will be removed soon. Use \"\"' +\n                    newMethodName +\n                    '\" instead.');\n            }\n            constructor.prototype[oldMethodName] = deprecated;\n            constructor.prototype[oldGetter] = deprecated;\n            constructor.prototype[oldSetter] = deprecated;\n        });\n    },\n    afterSetFilter() {\n        this._filterUpToDate = false;\n    },\n};\n","import { Util } from './Util.js';\nimport { Layer } from './Layer.js';\nimport { _registerNode } from './Global.js';\nexport class FastLayer extends Layer {\n    constructor(attrs) {\n        super(attrs);\n        this.listening(false);\n        Util.warn('Konva.Fast layer is deprecated. Please use \"new Konva.Layer({ listening: false })\" instead.');\n    }\n}\nFastLayer.prototype.nodeType = 'FastLayer';\n_registerNode(FastLayer);\n","var PI_OVER_180 = Math.PI / 180;\nfunction detectBrowser() {\n    return (typeof window !== 'undefined' &&\n        ({}.toString.call(window) === '[object Window]' ||\n            {}.toString.call(window) === '[object global]'));\n}\nexport const glob = typeof global !== 'undefined'\n    ? global\n    : typeof window !== 'undefined'\n        ? window\n        : typeof WorkerGlobalScope !== 'undefined'\n            ? self\n            : {};\nexport const Konva = {\n    _global: glob,\n    version: '8.3.10',\n    isBrowser: detectBrowser(),\n    isUnminified: /param/.test(function (param) { }.toString()),\n    dblClickWindow: 400,\n    getAngle(angle) {\n        return Konva.angleDeg ? angle * PI_OVER_180 : angle;\n    },\n    enableTrace: false,\n    pointerEventsEnabled: true,\n    autoDrawEnabled: true,\n    hitOnDragEnabled: false,\n    capturePointerEventsEnabled: false,\n    _mouseListenClick: false,\n    _touchListenClick: false,\n    _pointerListenClick: false,\n    _mouseInDblClickWindow: false,\n    _touchInDblClickWindow: false,\n    _pointerInDblClickWindow: false,\n    _mouseDblClickPointerId: null,\n    _touchDblClickPointerId: null,\n    _pointerDblClickPointerId: null,\n    pixelRatio: (typeof window !== 'undefined' && window.devicePixelRatio) || 1,\n    dragDistance: 3,\n    angleDeg: true,\n    showWarnings: true,\n    dragButtons: [0, 1],\n    isDragging() {\n        return Konva['DD'].isDragging;\n    },\n    isDragReady() {\n        return !!Konva['DD'].node;\n    },\n    document: glob.document,\n    _injectGlobal(Konva) {\n        glob.Konva = Konva;\n    },\n};\nexport const _registerNode = (NodeClass) => {\n    Konva[NodeClass.prototype.getClassName()] = NodeClass;\n};\nKonva._injectGlobal(Konva);\n","import { Util } from './Util.js';\nimport { Container } from './Container.js';\nimport { _registerNode } from './Global.js';\nexport class Group extends Container {\n    _validateAdd(child) {\n        var type = child.getType();\n        if (type !== 'Group' && type !== 'Shape') {\n            Util.throw('You may only add groups and shapes to groups.');\n        }\n    }\n}\nGroup.prototype.nodeType = 'Group';\n_registerNode(Group);\n","import { Util } from './Util.js';\nimport { Container } from './Container.js';\nimport { Node } from './Node.js';\nimport { Factory } from './Factory.js';\nimport { SceneCanvas, HitCanvas } from './Canvas.js';\nimport { getBooleanValidator } from './Validators.js';\nimport { shapes } from './Shape.js';\nimport { _registerNode } from './Global.js';\nvar HASH = '#', BEFORE_DRAW = 'beforeDraw', DRAW = 'draw', INTERSECTION_OFFSETS = [\n    { x: 0, y: 0 },\n    { x: -1, y: -1 },\n    { x: 1, y: -1 },\n    { x: 1, y: 1 },\n    { x: -1, y: 1 },\n], INTERSECTION_OFFSETS_LEN = INTERSECTION_OFFSETS.length;\nexport class Layer extends Container {\n    constructor(config) {\n        super(config);\n        this.canvas = new SceneCanvas();\n        this.hitCanvas = new HitCanvas({\n            pixelRatio: 1,\n        });\n        this._waitingForDraw = false;\n        this.on('visibleChange.konva', this._checkVisibility);\n        this._checkVisibility();\n        this.on('imageSmoothingEnabledChange.konva', this._setSmoothEnabled);\n        this._setSmoothEnabled();\n    }\n    createPNGStream() {\n        const c = this.canvas._canvas;\n        return c.createPNGStream();\n    }\n    getCanvas() {\n        return this.canvas;\n    }\n    getNativeCanvasElement() {\n        return this.canvas._canvas;\n    }\n    getHitCanvas() {\n        return this.hitCanvas;\n    }\n    getContext() {\n        return this.getCanvas().getContext();\n    }\n    clear(bounds) {\n        this.getContext().clear(bounds);\n        this.getHitCanvas().getContext().clear(bounds);\n        return this;\n    }\n    setZIndex(index) {\n        super.setZIndex(index);\n        var stage = this.getStage();\n        if (stage && stage.content) {\n            stage.content.removeChild(this.getNativeCanvasElement());\n            if (index < stage.children.length - 1) {\n                stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[index + 1].getCanvas()._canvas);\n            }\n            else {\n                stage.content.appendChild(this.getNativeCanvasElement());\n            }\n        }\n        return this;\n    }\n    moveToTop() {\n        Node.prototype.moveToTop.call(this);\n        var stage = this.getStage();\n        if (stage && stage.content) {\n            stage.content.removeChild(this.getNativeCanvasElement());\n            stage.content.appendChild(this.getNativeCanvasElement());\n        }\n        return true;\n    }\n    moveUp() {\n        var moved = Node.prototype.moveUp.call(this);\n        if (!moved) {\n            return false;\n        }\n        var stage = this.getStage();\n        if (!stage || !stage.content) {\n            return false;\n        }\n        stage.content.removeChild(this.getNativeCanvasElement());\n        if (this.index < stage.children.length - 1) {\n            stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[this.index + 1].getCanvas()._canvas);\n        }\n        else {\n            stage.content.appendChild(this.getNativeCanvasElement());\n        }\n        return true;\n    }\n    moveDown() {\n        if (Node.prototype.moveDown.call(this)) {\n            var stage = this.getStage();\n            if (stage) {\n                var children = stage.children;\n                if (stage.content) {\n                    stage.content.removeChild(this.getNativeCanvasElement());\n                    stage.content.insertBefore(this.getNativeCanvasElement(), children[this.index + 1].getCanvas()._canvas);\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    moveToBottom() {\n        if (Node.prototype.moveToBottom.call(this)) {\n            var stage = this.getStage();\n            if (stage) {\n                var children = stage.children;\n                if (stage.content) {\n                    stage.content.removeChild(this.getNativeCanvasElement());\n                    stage.content.insertBefore(this.getNativeCanvasElement(), children[1].getCanvas()._canvas);\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    getLayer() {\n        return this;\n    }\n    remove() {\n        var _canvas = this.getNativeCanvasElement();\n        Node.prototype.remove.call(this);\n        if (_canvas && _canvas.parentNode && Util._isInDocument(_canvas)) {\n            _canvas.parentNode.removeChild(_canvas);\n        }\n        return this;\n    }\n    getStage() {\n        return this.parent;\n    }\n    setSize({ width, height }) {\n        this.canvas.setSize(width, height);\n        this.hitCanvas.setSize(width, height);\n        this._setSmoothEnabled();\n        return this;\n    }\n    _validateAdd(child) {\n        var type = child.getType();\n        if (type !== 'Group' && type !== 'Shape') {\n            Util.throw('You may only add groups and shapes to a layer.');\n        }\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        config.width = config.width || this.getWidth();\n        config.height = config.height || this.getHeight();\n        config.x = config.x !== undefined ? config.x : this.x();\n        config.y = config.y !== undefined ? config.y : this.y();\n        return Node.prototype._toKonvaCanvas.call(this, config);\n    }\n    _checkVisibility() {\n        const visible = this.visible();\n        if (visible) {\n            this.canvas._canvas.style.display = 'block';\n        }\n        else {\n            this.canvas._canvas.style.display = 'none';\n        }\n    }\n    _setSmoothEnabled() {\n        this.getContext()._context.imageSmoothingEnabled =\n            this.imageSmoothingEnabled();\n    }\n    getWidth() {\n        if (this.parent) {\n            return this.parent.width();\n        }\n    }\n    setWidth() {\n        Util.warn('Can not change width of layer. Use \"stage.width(value)\" function instead.');\n    }\n    getHeight() {\n        if (this.parent) {\n            return this.parent.height();\n        }\n    }\n    setHeight() {\n        Util.warn('Can not change height of layer. Use \"stage.height(value)\" function instead.');\n    }\n    batchDraw() {\n        if (!this._waitingForDraw) {\n            this._waitingForDraw = true;\n            Util.requestAnimFrame(() => {\n                this.draw();\n                this._waitingForDraw = false;\n            });\n        }\n        return this;\n    }\n    getIntersection(pos) {\n        if (!this.isListening() || !this.isVisible()) {\n            return null;\n        }\n        var spiralSearchDistance = 1;\n        var continueSearch = false;\n        while (true) {\n            for (let i = 0; i < INTERSECTION_OFFSETS_LEN; i++) {\n                const intersectionOffset = INTERSECTION_OFFSETS[i];\n                const obj = this._getIntersection({\n                    x: pos.x + intersectionOffset.x * spiralSearchDistance,\n                    y: pos.y + intersectionOffset.y * spiralSearchDistance,\n                });\n                const shape = obj.shape;\n                if (shape) {\n                    return shape;\n                }\n                continueSearch = !!obj.antialiased;\n                if (!obj.antialiased) {\n                    break;\n                }\n            }\n            if (continueSearch) {\n                spiralSearchDistance += 1;\n            }\n            else {\n                return null;\n            }\n        }\n    }\n    _getIntersection(pos) {\n        const ratio = this.hitCanvas.pixelRatio;\n        const p = this.hitCanvas.context.getImageData(Math.round(pos.x * ratio), Math.round(pos.y * ratio), 1, 1).data;\n        const p3 = p[3];\n        if (p3 === 255) {\n            const colorKey = Util._rgbToHex(p[0], p[1], p[2]);\n            const shape = shapes[HASH + colorKey];\n            if (shape) {\n                return {\n                    shape: shape,\n                };\n            }\n            return {\n                antialiased: true,\n            };\n        }\n        else if (p3 > 0) {\n            return {\n                antialiased: true,\n            };\n        }\n        return {};\n    }\n    drawScene(can, top) {\n        var layer = this.getLayer(), canvas = can || (layer && layer.getCanvas());\n        this._fire(BEFORE_DRAW, {\n            node: this,\n        });\n        if (this.clearBeforeDraw()) {\n            canvas.getContext().clear();\n        }\n        Container.prototype.drawScene.call(this, canvas, top);\n        this._fire(DRAW, {\n            node: this,\n        });\n        return this;\n    }\n    drawHit(can, top) {\n        var layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas);\n        if (layer && layer.clearBeforeDraw()) {\n            layer.getHitCanvas().getContext().clear();\n        }\n        Container.prototype.drawHit.call(this, canvas, top);\n        return this;\n    }\n    enableHitGraph() {\n        this.hitGraphEnabled(true);\n        return this;\n    }\n    disableHitGraph() {\n        this.hitGraphEnabled(false);\n        return this;\n    }\n    setHitGraphEnabled(val) {\n        Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n        this.listening(val);\n    }\n    getHitGraphEnabled(val) {\n        Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n        return this.listening();\n    }\n    toggleHitCanvas() {\n        if (!this.parent || !this.parent['content']) {\n            return;\n        }\n        var parent = this.parent;\n        var added = !!this.hitCanvas._canvas.parentNode;\n        if (added) {\n            parent.content.removeChild(this.hitCanvas._canvas);\n        }\n        else {\n            parent.content.appendChild(this.hitCanvas._canvas);\n        }\n    }\n}\nLayer.prototype.nodeType = 'Layer';\n_registerNode(Layer);\nFactory.addGetterSetter(Layer, 'imageSmoothingEnabled', true);\nFactory.addGetterSetter(Layer, 'clearBeforeDraw', true);\nFactory.addGetterSetter(Layer, 'hitGraphEnabled', true, getBooleanValidator());\n","import { Konva } from './Global.js';\nconst Captures = new Map();\nconst SUPPORT_POINTER_EVENTS = Konva._global['PointerEvent'] !== undefined;\nexport function getCapturedShape(pointerId) {\n    return Captures.get(pointerId);\n}\nexport function createEvent(evt) {\n    return {\n        evt,\n        pointerId: evt.pointerId,\n    };\n}\nexport function hasPointerCapture(pointerId, shape) {\n    return Captures.get(pointerId) === shape;\n}\nexport function setPointerCapture(pointerId, shape) {\n    releaseCapture(pointerId);\n    const stage = shape.getStage();\n    if (!stage)\n        return;\n    Captures.set(pointerId, shape);\n    if (SUPPORT_POINTER_EVENTS) {\n        shape._fire('gotpointercapture', createEvent(new PointerEvent('gotpointercapture')));\n    }\n}\nexport function releaseCapture(pointerId, target) {\n    const shape = Captures.get(pointerId);\n    if (!shape)\n        return;\n    const stage = shape.getStage();\n    if (stage && stage.content) {\n    }\n    Captures.delete(pointerId);\n    if (SUPPORT_POINTER_EVENTS) {\n        shape._fire('lostpointercapture', createEvent(new PointerEvent('lostpointercapture')));\n    }\n}\n"],"sourceRoot":""}